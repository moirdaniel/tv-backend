name: Deploy TV Backend

on:
  push:
    branches:
      - Serv01

jobs:
  deploy:
    name: Despliegue directo con Dockerfile
    runs-on: self-hosted

    steps:
    - name: Limpiar clon anterior y clonar repo privado
      run: |
        echo "${{ secrets.DMOIR_SUDO_PASSWORD }}" | sudo -S rm -rf /tmp/tv-backend
        git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/moirdaniel/tv-backend.git /tmp/tv-backend

    - name: Detener contenedor que usa el puerto 3000 (si existe)
      run: |
        EXISTING=$(docker ps -q --filter "publish=3000")
        if [ -n "$EXISTING" ]; then
          echo "${{ secrets.DMOIR_SUDO_PASSWORD }}" | sudo -S docker stop $EXISTING
          echo "${{ secrets.DMOIR_SUDO_PASSWORD }}" | sudo -S docker rm $EXISTING
        fi

    - name: Detener contenedor anterior por nombre (si existe)
      run: |
        if [ "$(docker ps -aq -f name=tv-backend)" ]; then
          echo "${{ secrets.DMOIR_SUDO_PASSWORD }}" | sudo -S docker stop tv-backend || true
          echo "${{ secrets.DMOIR_SUDO_PASSWORD }}" | sudo -S docker rm tv-backend || true
        fi

    - name: Construir imagen desde Dockerfile
      run: |
        cd /tmp/tv-backend
        echo "${{ secrets.DMOIR_SUDO_PASSWORD }}" | sudo -S docker build -t tv-backend:latest .

    - name: Ejecutar nuevo contenedor
      run: |
        echo "${{ secrets.DMOIR_SUDO_PASSWORD }}" | sudo -S docker run -d \
          --name tv-backend \
          -p 3000:3000 \
          -v /tmp/tv-backend:/app \
          tv-backend:latest

    - name: Verificar contenedor en ejecuci√≥n
      run: docker ps --filter "name=tv-backend"
